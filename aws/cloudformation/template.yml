AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  SourceBucketName:
    Type: String
    Description: The S3 bucket as a files container
  TargetBucketName:
    Type: String
    Description: The S3 bucket will copy files to
  LambdaFunctionName:
    Type: String
    Description: The name of lambda function
  LambdaPolicyName:
    Type: String
    Description: The role who can invoke lambda function and operate objects between buckets

Resources:
  InvokeLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Ref LambdaPolicyName
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub arn:aws:s3:::${SourceBucketName}/*
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub arn:aws:s3:::${TargetBucketName}/*

  ReadFileLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Handler: index.lambda_handler
      Role: !GetAtt InvokeLambdaRole.Arn
      Code: ../../dist
      Runtime: "python3.7"
      Timeout: 3

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ReadFileLambda.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:s3:::${SourceBucketName}

  ResourceBucket:
    DependsOn: 
      - ReadFileLambda
      - LambdaInvokePermission
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          Event: s3:ObjectCreated:*
          Filter:
            S3Key:
              Rules:
                - Name: suffix
                  Value: .jpg
          Function: !GetAtt ReadFileLambda.Arn

  TargetBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref TargetBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        RestrictPublicBuckets: TRUE
      VersioningConfiguration:
        Status: Enabled
